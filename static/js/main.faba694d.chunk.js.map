{"version":3,"sources":["components/Forms.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Forms","setInputText","todos","setTodos","inputText","setStatus","onChange","e","target","value","type","className","placeholder","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","console","log","App","useState","status","setFilteredTodos","useEffect","filterHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAEe,SAASA,EAAT,GAAuE,IAAvDC,EAAsD,EAAtDA,aAAcC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,UAAUC,EAAa,EAAbA,UAmBpE,OACI,iCACA,uBAAOC,SAnBY,SAACC,GAExBN,EAAaM,EAAEC,OAAOC,QAiBiBC,KAAK,OAAOC,UAAU,aAAaC,YAAY,oBAClF,wBAAQC,QAfY,SAACN,GACzBA,EAAEO,iBACFX,EAAS,GAAD,mBACHD,GADG,CACG,CAACa,KAAKX,EAAWY,WAAW,EAAOC,GAAkB,IAAdC,KAAKC,cAYfR,UAAU,cAAcD,KAAK,SAAjE,SACE,mBAAGC,UAAU,yBAEf,qBAAKA,UAAU,SAAf,SACE,yBAAQS,KAAK,QAAQT,UAAU,cAAcL,SAX/B,SAACC,GACrBF,EAAUE,EAAEC,OAAOC,QAUb,UACE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,iC,WC7BG,SAASY,EAAT,GAAsC,IAAvBC,EAAsB,EAAtBA,KAAKpB,EAAiB,EAAjBA,MAAMC,EAAW,EAAXA,SAqBrC,OAEwB,sBAAKQ,UAAS,eAAUW,EAAKN,UAAY,YAAY,IAArD,UAEI,oBAAIL,UAAU,YAAd,SAA2BW,EAAKP,OAChC,wBAAQF,QApBb,WAEtBV,EAASD,EAAMqB,KAAI,SAAAC,GACf,OAAGA,EAAKP,KAAMK,EAAKL,GAEhB,2BACOO,GADP,IACaR,WAAYQ,EAAKR,YAG3BQ,OAWmDb,UAAU,eAA5C,SACI,mBAAGA,UAAU,mBAEjB,wBAAQE,QA5Bf,WAElBV,EAASD,EAAMuB,QAAO,SAACC,GAAD,OAAQA,EAAGT,KAAOK,EAAKL,QA0BYN,UAAU,YAA1C,SACI,mBAAGA,UAAU,sBC7BlC,SAASgB,EAAT,GAAmD,IAAhCzB,EAA+B,EAA/BA,MAAMC,EAAyB,EAAzBA,SAASyB,EAAgB,EAAhBA,cAE7C,OADAC,QAAQC,IAAI5B,GAEA,qBAAKS,UAAU,iBAAf,SACQ,oBAAIA,UAAU,YAAd,SACKiB,EAAcL,KAAI,SAAAD,GAAI,OACf,cAACD,EAAD,CACIlB,SAAUA,EACVD,MAAOA,EACPoB,KAAMA,EACNP,KAAMO,EAAKP,MACNO,EAAKL,W,MC8BnCc,MAvCf,WAGE,MAAmCC,mBAAS,IAA5C,mBAAO5B,EAAP,KAAmBH,EAAnB,KACA,EAA0B+B,mBAAS,IAAnC,mBAAO9B,EAAP,KAAcC,EAAd,KACA,EAA2B6B,mBAAS,OAApC,mBAAOC,EAAP,KAAc5B,EAAd,KACA,EAA0C2B,mBAAS,IAAnD,mBAAOJ,EAAP,KAAqBM,EAArB,KAIDC,qBAAU,WACTC,MACC,CAAClC,EAAM+B,IAGV,IAAMG,EAAgB,WACpB,OAAOH,GACL,IAAK,YACHC,EAAiBhC,EAAMuB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACF,IAAK,cACHkB,EAAiBhC,EAAMuB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACF,QACEkB,EAAiBhC,KAMrB,OACE,sBAAKS,UAAU,gBAAf,UACE,sDACA,cAACX,EAAD,CAAOI,UAAWA,EAAWF,MAAOA,EAAOC,SAAUA,EAAUF,aAAeA,EAAcI,UAAWA,IACvG,cAACsB,EAAD,CAAUzB,MAAOA,EAAOC,SAAUA,EAAUyB,cAAeA,QCnCjES,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.faba694d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Forms({setInputText, todos, setTodos, inputText,setStatus }) {\r\n  \r\n  const inputTextHandler = (e) =>{\r\n    //console.log(e.target.value);\r\n    setInputText(e.target.value);\r\n\r\n  }\r\n  const submitTodoHandler = (e) =>{\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos,{text:inputText, completed: false, id: Math.random()*1000},\r\n    ]);\r\n   \r\n    \r\n  }\r\n  const statusHandler = (e) =>{\r\n    setStatus(e.target.value);\r\n  }\r\n  \r\n    return (\r\n        <form>\r\n        <input onChange={inputTextHandler} type=\"text\" className=\"todo-input\" placeholder=\"Enter new task \" />\r\n        <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n          <select name=\"todos\" className=\"filter-todo\" onChange={statusHandler}>\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Todo({todo,todos,setTodos}) {\r\n   const deleteHandler = () =>{\r\n       //console.log(todos);\r\n       setTodos(todos.filter((el) => el.id !== todo.id));\r\n       //console.log(todo);\r\n   }\r\n   const completeHandler = () =>{\r\n       \r\n     setTodos(todos.map(item =>{ \r\n         if(item.id=== todo.id){\r\n\r\n            return{\r\n                ...item, completed: !item.completed\r\n            }\r\n        }\r\n        return item;\r\n     }))\r\n      \r\n       \r\n   }\r\n\r\n    return (\r\n        \r\n                            <div className={`todo ${todo.completed ? \"completed\":\"\"}`} >\r\n                                \r\n                                <li className=\"todo-item\">{todo.text}</li>\r\n                                <button onClick={completeHandler} className=\"complete-btn\">\r\n                                    <i className=\"fas fa-check\"></i>\r\n                                </button>\r\n                                <button onClick={deleteHandler} className=\"trash-btn\">\r\n                                    <i className=\"fas fa-trash\"></i>\r\n                                </button>\r\n                            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nexport default function TodoList({todos,setTodos,filteredTodos}) {\r\n    console.log(todos);\r\n    return (\r\n                <div className=\"todo-container\">\r\n                        <ul className=\"todo-list\">\r\n                            {filteredTodos.map(todo =>( \r\n                                    <Todo\r\n                                        setTodos={setTodos}\r\n                                        todos={todos}\r\n                                        todo={todo} \r\n                                        text={todo.text} \r\n                                        key={todo.id} \r\n                                     />\r\n                            ))}\r\n                        </ul>\r\n                </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from \"react\";\nimport Forms from './components/Forms';\nimport TodoList from './components/TodoList';\nimport './App.css';\n\nfunction App() {\n\n  //state stuff\n  const [inputText , setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status,setStatus] = useState('all');\n  const [filteredTodos,setFilteredTodos] =  useState([]);\n //state stuff\n\n //USE EFFECTS\n useEffect(()=>{\n  filterHandler();\n },[todos,status]);\n\n //functions\nconst filterHandler = () =>{\n  switch(status){\n    case \"completed\":\n      setFilteredTodos(todos.filter(todo => todo.completed === true));\n      break;\n    case \"uncompleted\":\n      setFilteredTodos(todos.filter(todo => todo.completed === false));\n      break;\n    default:\n      setFilteredTodos(todos);\n      break;\n  }\n};\n\n\n  return (\n    <div className=\"app-container\">\n      <header>AMIT's TODO LIST</header>\n      <Forms inputText={inputText} todos={todos} setTodos={setTodos} setInputText= {setInputText} setStatus={setStatus}  />\n      <TodoList todos={todos} setTodos={setTodos} filteredTodos={filteredTodos} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}